class Download extends DefaultTask {
  String url
  String filename

  @TaskAction
  def download() {
    def file = new File(filename)
    if(!file.exists()) {
      new URL(url).withInputStream { input -> file.withOutputStream { output -> output << input } }
    }
  }
}

class Docker extends DefaultTask {
  String location
  String repository

  @TaskAction
  def createImage() {
    // docker images --format "{{.Repository}}:{{.Tag}}" | grep repository:latest
    project.exec {
      executable = 'docker'
      args = ['build', '-t', repository, location]
    }
  }
}

task downloadTools(type: Download) {
  url = 'https://github.com/raspberrypi/tools/archive/master.zip'
  filename = 'arm-bcm2708/raspberrypi-tools.zip'
}

task image(type: Docker, dependsOn: downloadTools) {
  location = 'arm-bcm2708'
  repository = 'raphaelmeyer/arm-bcm2708'
}

